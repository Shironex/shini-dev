// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Message {
  id       String         @id @default(uuid())
  content  String
  role     MessageRole
  type     MessageType
  status   MessageStatus  @default(COMPLETED)
  fragment Fragment?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  project   Project? @relation(fields: [projectId], references: [id], onDelete: Cascade)
  projectId String?
}

model Fragment {
  id String @id @default(uuid())

  title      String
  sandboxUrl String?
  summary    String?
  files      Json?

  messageId String  @unique
  message   Message @relation(fields: [messageId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Project {
  id String @id @default(uuid())

  name     String
  messages Message[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum MessageRole {
  USER
  ASSISTANT
}

enum MessageType {
  RESULT
  ERROR
}

enum MessageStatus {
  PENDING
  STREAMING
  COMPLETED
  FAILED
}
